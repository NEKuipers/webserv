root http;
error_uri ErrorPage;

#accepted_methods POST;	# not allowed, has try_files affected

server {
	listen 0.0.0.0:80;
	listen 0.0.0.0:5000;	# sometimes :80 just does not work, but 5000 does, 10/10 solution
	listen 0.0.0.0:5001;

	root $root/default;

	# When you index this directory, redirect to index
	index {
		redirect index;
	}

	location *.cgi/ {
		root $root/cgi;
		try_cgi $uri;
	}
	location cgi/ {
		index {	# when you index the cgi directory
			redirect cgi_dir.html;
		}
	}

	location default/ {
		error_uri;	# clear the error page
	}

	location test/ {
		try_files $uri $uri.html;	
	}
	location test_same/ {
		location_root test;
		try_files $uri $uri.html;	
	}

	try_files $uri $uri.html;
}

server {
	listen 127.0.0.1:80;

	root $root/default80;
	try_files $uri $uri.html;
}

server {
	root $root/test1;

	server_name test1.com;

	client_max_body_size 64;
	try_files $uri $uri.html;

	client_max_body_size 1048576;
	try_files big/$uri big/$uri.html;

	try_file index.html;

	#redirect File2;
}

server {
	root $root/test2;
	server_name test2.com;

	location / {
		try_files $uri $uri.html;
	}

	location test/ {
		location override/ { }

		#try_files override/$uri override/$uri.html $uri $uri.html;	# you could still access a overridden file with this, just request ../$uri and you get non-overridden files

		# better, but when you request test/../test/$uri the override try files will fail, but the test will still be valid
		location_root override;
		try_file $uri $uri.html;

		location_root test;
		try_file $uri $uri.html;
	}

	location post/ {
		accepted_methods POST;

		# well, now only post requests are in here, but... i have no function to accept post stuff... Guesss we just 'No response', not even the error page will accept a post request
	}

	location forbidden/ {
		# empty, will error, even if a file exists at root/forbidden/...
		error_uri ForbiddenErrorPage;
	}
}

try_file ErrorPage.html;	# Not inside server block, will be defaulted on localhost:80